import { Manager } from "./manager";
export declare class Frame {
    private manager;
    private title;
    private address;
    private rndID;
    private divFrame;
    private divHead;
    private imgMenu;
    private divTitle;
    private imgMinimize;
    private imgMaximize;
    private imgClose;
    private iframeBody;
    private divFoot;
    private imgStatusType;
    private divStatusText;
    private imgResize;
    private minimized;
    private maximized;
    private lastWidth;
    private lastHeight;
    constructor(manager: Manager, title: string, address: string);
    private initFrameTitle;
    private initDivFrame;
    private loadFrameInitBounds;
    private getFrameWindowStyleID;
    private initDivHead;
    private initIFrameBody;
    private initDivFoot;
    private initDraggable;
    getTitle(): string;
    getID(): string;
    install(): void;
    headMenuAction(): void;
    headMinimizeAction(): void;
    headMaximizeAction(): void;
    headCloseAction(): void;
    statusInfo(message: string): void;
    statusError(error: any, origin: string): void;
    saveFrameBounds(): void;
    show(): void;
    close(): void;
    getIFrame(): HTMLIFrameElement;
    getIFrameDocument(): Document;
    newDialog(title: string, divContent: HTMLDivElement): FrameDialog;
    newPopup(divContent: HTMLDivElement): FramePopup;
}
export declare class FrameDialog {
    private frame;
    private title;
    private divContent;
    private divDialog;
    private divTop;
    private spanTitle;
    private spanClose;
    private imgClose;
    private divPack;
    private showing;
    private docNodes;
    constructor(frame: Frame, title: string, divContent: HTMLDivElement);
    private initDialog;
    private initTop;
    private initPack;
    show(): void;
    close(): void;
}
export declare class FramePopup {
    private _frame;
    private _divContent;
    private _divMain;
    private _posLeft;
    private _posTop;
    private _maxWidth;
    private _maxHeight;
    constructor(frame: Frame, divContent: HTMLDivElement);
    private initMain;
    private addFocusOutCloseToAll;
    private onFocusOutClose;
    show(): void;
    close(): void;
    toggle(): void;
    get frame(): Frame;
    get divContent(): HTMLDivElement;
    get divMain(): HTMLDivElement;
    get posLeft(): number;
    get posTop(): number;
    get maxWidth(): number;
    get maxHeight(): number;
}
//# sourceMappingURL=frame.d.ts.map